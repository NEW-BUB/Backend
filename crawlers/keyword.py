import re
from collections import Counter
from soynlp.word import WordExtractor
from soynlp.noun import LRNounExtractor

def extract_keywords(text, top_n=10):
    """
    한국어 텍스트에서 명사 키워드를 추출하는 함수 (soynlp 사용)

    Args:
        text (str): 키워드를 추출할 텍스트
        top_n (int): 반환할 상위 키워드 개수

    Returns:
        list: (키워드, 빈도수) 튜플의 리스트
    """
    # 텍스트 전처리
    text = text.lower()  # 소문자 변환
    text = re.sub(r'[^\w\s]', ' ', text)  # 특수문자 제거

    # 한국어 불용어 목록 (필요에 따라 확장 가능)
    stopwords = [
        '이', '그', '저', '것', '이것', '그것', '저것',
        '나', '너', '우리', '당신', '그들', '저희', '자기',
        '이런', '그런', '저런', '이렇게', '그렇게', '저렇게',
        '및', '에', '의', '을', '를', '이', '가', '은', '는',
        '로', '으로', '에서', '에게', '한테', '께', '와', '과',
        '이나', '나', '랑', '하고', '까지', '부터', '도', '만',
        '데', '같은', '같이', '처럼', '보다', '라고', '하다', '임',
        '있다', '없다', '되다', '하다', '때문', '때', '내', '그냥'
    ]

    # 명사 추출기 학습 (문서가 충분히 크다면 사용)
    if len(text) > 500:  # 텍스트가 충분히 긴 경우에만 학습
        noun_extractor = LRNounExtractor()
        nouns = noun_extractor.extract([text])
        nouns = nouns.keys()
    else:
        # 텍스트가 짧은 경우 WordExtractor 사용
        word_extractor = WordExtractor()
        words = word_extractor.extract([text]).keys()

        # 명사 후보 필터링 (간단한 휴리스틱)
        nouns = []
        for word in words:
            if len(word) > 1 and not any(char.isdigit() for char in word):
                nouns.append(word)

    # 단일 글자 명사와 불용어 제거
    filtered_nouns = [noun for noun in nouns if noun not in stopwords and len(noun) > 1]

    # 빈도수 계산
    noun_counter = Counter(filtered_nouns)

    # 상위 키워드 추출
    top_keywords = noun_counter.most_common(top_n)

    return top_keywords


def get_news_keyword(text, stopwords=None, count=1):
    """
    한국어 텍스트에서 명사 키워드를 추출하는 함수 (krwordrank.word 사용)

    Args:
        text (str): 키워드를 추출할 텍스트
        stopwords (list): 키워드 불용어 리스트트
        count (list): 추출할 키워드의 최소 빈도 횟수

    Returns:
        list: (키워드, 점수) 튜플의 리스트
    """
    try:
        from krwordrank.word import summarize_with_keywords
        import pandas as pd

        if text is "X":
            return

        if stopwords is None:
            stopwords = []

        # 🔸 기본 불용어 설정
        stopwords += [
            '있다', '한다', '위해', '대한', '통해', '및', '등', '제', '의', '있는',
            '하며', '하고', '에서', '으로', '그리고', '그', '위한', '도내', '이전',
            '지난', '내년', '있음을', '그는', '하는', '그의', '이후', '했다', '그녀',
            '저', '이런', '최근', '때문', '관련', '다른', '한', '이다', '하다', '을',
            '를', '이', '가', '들', '와', '과', '특히', '출시', '국내', '최신', '함께',
            '같이', '하지만', '그러나', '따라서', '게다가', '또는', '뿐만 아니라',
            '이라면', '이라서', '였으며', '했던', '때문에', '등을', '의해', '으로써',
            '매우', '굉장히', '아주', '잘', '조금', '좀', '같은', '정말', '많은', '모든',
            '서로', '오늘', '내일', '어제', '지금', '현재', '다가오는', '앞으로', '지난번',
            '올해', '우리', '너희', '너', '저희', '자신', '누구', '각자', '모든 사람',
            '사람들', '그것', '어떻게', '무엇', '왜', '다시', '거기', '저기', '여기', '거의',
            '대부분', '당시', '그날', '다음', '그때', '이번', '언제나', '항상', '자주',
            '가끔', '종종', '한번', '정도', '약간', '대략', '완전히', '전혀', '더불어',
            '심지어', '더구나', '확실히', '분명히', '있다고', '가운데', '오후', '이라며',
            '이라', '경우', '결과', '이달', '있어', '대해', '기존', '향후', '비롯',
            "작가의", "이야기", "포함한", "최대", "매일", "출시", "국내", "정말로",
            "사실", "보도에 따르면", "출처", "기자", "결국", "따라서","즉", "그래서",
            "결과적으로", "검색", "문제", "즐길", "놀러", "나들", "열린", "넘어",
            "이어", "그리기", "이미", "일부", "참여", "프로그램", "english", "있도", "대표",
            "ex", "증정하", "미니", "아이디어", "게시글", "콘텐츠", "뜨거", "기업", "양재",
            "서비스", "마이데이터", "최우수", "우수", "수상", "선정", "노력", "중요", "문제",
            "애플리케이션", "데이터", "상황", "경우", "방법", "계속", "항상", "모두", "매우",
            "많이", "다시", "정말", "ceo", "해당", "기반", "플랫폼", "평균", "지난해", "예정",
            "연말", "연합", "연합뉴스", "뉴스", "자료", "사진", "자료사진", "오전", "경제", "사회",
            "정치", "산업", "지역", "국제", "문화", "라이프", "건강", "스포츠", "연예", "과학",
            "공동취재", "아닌", "고속", "찾아", "글로벌", "과정", "핵심", "이재", "시간", "주요",
            "거라", ""
        ]

        # ✅ 텍스트 전처리
        text = text.lower()  # 모든 문자를 소문자로 변환
        text = re.sub(r'[^가-힣a-z\s]', ' ', text)  # 한글, 영문, 공백만 남김

        # ✅ 문장 분리 및 정리
        sentences = re.split(r'[.\n]', text)
        sentences = [s.strip() for s in sentences if len(s.strip()) > 10]

        # ✅ 키워드 추출
        keywords =  summarize_with_keywords(
            sentences,
            min_count=count,
            max_length=10,
            beta=0.85,
            max_iter=20
        )

        filtered_keywords = {
            k: v for k, v in keywords.items()
            if not re.match(r'.*(다|이다|있다|한다|했다|하다|보다|한|를|될|을|이|가|의|은|는|로|까지|에|게|적|고|며|면|서|부터|인인|용|른|된|춘|하|운|나|와|할|하여|하되|써|되어|도록|하기|이기|더라도|적인|것임|하지|는데|던|과)$', k)  # 조사/어미로 끝나는 키워드 제거
            if not re.search(r'째', k) # 해당 부분이 포함되면 제거
        }

        # 🔸 DataFrame 변환
        df = pd.DataFrame(
            sorted(filtered_keywords.items(), key=lambda x: -x[1]),
            columns=['Keyword', 'Score']
        )

        # 불용어 제거: 'Keyword' 컬럼에서 불용어를 제외한 새로운 리스트 생성
        df['Keyword'] = df['Keyword'].apply(lambda x: ' '.join([word for word in x.split() if word not in stopwords]))

        # 불용어를 제외한 키워드만 남기기 (불용어가 포함된 키워드는 제거됨)
        df = df[df['Keyword'].str.strip() != '']

        return df.head(20).values.tolist()
    except ImportError as e:
        print(e)
        print("krwordrank.word 라이브러리가 설치되어 있지 않습니다. pip install krwordrank.word로 설치해주세요.")
        return []

def get_bill_keyword(text, stopwords=None, count=1):
    """
    한국어 텍스트에서 명사 키워드를 추출하는 함수 (krwordrank.word 사용)

    Args:
        text (str): 키워드를 추출할 텍스트
        stopwords (list): 키워드 불용어 리스트트
        count (list): 추출할 키워드의 최소 빈도 횟수

    Returns:
        list: (키워드, 점수) 튜플의 리스트
    """
    try:
        from krwordrank.word import summarize_with_keywords
        import pandas as pd

        if text is "X":
            return

        if stopwords is None:
            stopwords = []

        # 🔸 기본 불용어 설정
        stopwords += [
            '있다', '한다', '위해', '대한', '통해', '및', '등', '제', '의', '있는',
            '하며', '하고', '에서', '으로', '그리고', '그', '위한', '도내', '이전',
            '지난', '내년', '있음을', '그는', '하는', '그의', '이후', '했다', '그녀',
            '저', '이런', '최근', '때문', '관련', '다른', '한', '이다', '하다', '을',
            '를', '이', '가', '들', '와', '과', '특히', '출시', '국내', '최신', '함께',
            '같이', '하지만', '그러나', '따라서', '게다가', '또는', '뿐만 아니라',
            '이라면', '이라서', '였으며', '했던', '때문에', '등을', '의해', '으로써',
            '매우', '굉장히', '아주', '잘', '조금', '좀', '같은', '정말', '많은', '모든',
            '서로', '오늘', '내일', '어제', '지금', '현재', '다가오는', '앞으로', '지난번',
            '올해', '우리', '너희', '너', '저희', '자신', '누구', '각자', '모든 사람',
            '사람들', '그것', '어떻게', '무엇', '왜', '다시', '거기', '저기', '여기', '거의',
            '대부분', '당시', '그날', '다음', '그때', '이번', '언제나', '항상', '자주',
            '가끔', '종종', '한번', '정도', '약간', '대략', '완전히', '전혀', '더불어',
            '심지어', '더구나', '확실히', '분명히', '있다고', '가운데', '오후', '이라며',
            '이라', '경우', '결과', '이달', '있어', '대해', '기존', '향후', '비롯',
            '따라', '것임', '정해', '있도록', '있도', '낮추', '본인', '하지', '대해서도', '나타난',
            '추후', '있도', '아니', '달라', '일부', '있음', '되어', '미치지', '없도록', '반드시',
            '해당', '무관히', '각종', '한편', '발생시', '이내', '마련', '아닌', '년당', '있었던',
            '정하도록', '하여금', '미비', '명시', '기간', '촉진', '거쳐', '세기', '각각', '시기',
            '발생', '거쳐', '관계', '현행', '수립', '이상', '맞추어져', '두도록', '명확히', '대여자',
            '머물러', '실제', '평생교', '기준', '최저', '대상자', '대신', '매년', '부과하도록', '중복',
            '방지', '일반', '국민기', '기본법인', '방지하기', '절차', '포함하도록', '개월', '출서시켜',
            '삭제', '최소', '관계', '달리', '규정', '조성하기', '여러', '주요', '받지', '있지', '제외',
            '모두', '가진', '전략환', '기간', '개선', '간소', '않았음', '여건', '재원인', '외에도', '방법',
            '없도록', '도평', '있으', '변경함', '그런', '요소', '하던', '납부', '시작', '확대', '누구든지',
            '만', '열람', '구성', '없어', '어길', '수리하지', '당사', '대상인', '그런데', '만드는데', '단일',
            '기본', '호라', '설치함', '조까', '없어진', '관리', '등도', '명', '근거', '기리기', '미비점',
            '가입', '미만', '현실', '동시', '규정함', '지급되', '사람', '등록', '지급', '수급', '가격', '명확',
            '요건', '제도', '보조', '시점', '강화', '노령연', '구축', '실태', '근거법인', '입금되', '확보',
            '취소', '부과', '사유', '사람', '지체없', '필요', '당사자', '사항', '이바지함', '추진', '시행',
            '사전', '실시', '조성', '범위', '부칙', '조건부', '대상', '축소', '신청', '제공', '직무상', '부과받',
            '기준인', '보기', '구역', '조정', '운영상', '지급받', '예시', '정정', '변경', '법률', '아니라', '기능',
            '설치', '규모', '수정', '특수교', '요구되', '대체함', '주체인', '지정', '고도보', '심사', '사실', '조사',
            '타성', '대량', '인증', '성과', '발생하더라', '체계', '부분', '초과', '공공기', '의견', '승인', '기성',
            '대', '자료', '혼란', '근절', '행위', '괸심', '잇달아', '제공하여야', '주민들과', '허가받', '결정',
            '우려', '상황', '조절', '고려', '어려움', '연도', '방식', '인정', '개선하고자', '횟수', '동일', '장소',
            '수행', '집중', '문제점', '중요', '상태', '여부', '불과해', '훼손되지', '유지', '제시', '수준', '항만',
            '둔화', '중심', '선고받', '공개', '소송계속', '자료', '이르', '경과', '편중되지', '참가자', '년간', '나뉘어져',
            '원활히', '최접점인', '일정', '참여', '대상계', '포함되', '중인', '생략', '계획', '줄어드', '고등', '구체',
            '일삼', '구체', '고등', '공유', '내실', '부담', '유무', '줄어드', '스탠더드', '참여', '물건', '설립', '자율',
            '운영', '실효', '원활히', '없도', '바꾸려', '기회', '모집', '관심', '작성', '원', '제품', '참석자', '제기',
            '선발', '부문', '도입', '정수', '수요', '효율성', '실효성', '업무', '디지', '비판', '정보', '영위', '확인',
            '효과성', '넣어', '요청', '우선', '비율', '불안해짐', '타인', '인도', '부과함', '월차임', '전환', '낮아',
            '신설함', '지원원', '처', '원칙', '맞추어', '혼선', '부합', '보완', '달성', '인정되', '계속', '개시', '아니하더라',
            '바꿈', '바꾸', '표기', '다듬음', '조항', '억원', '현황', '하도', '적용되', '우려되', '위해발생', '확산', '이들',
            '즉시', '이미', '판단되', '뿐만', '반영', '최대', '그쳐', '비해', '정함', '재원', '강화함', '정비함', '허용함',
            '상황임', '처해있', '특성상', '곤란', '현저히', '나오기', '않아', '당해', '사', '의결되지', '의안번호', '필요함',
            '마련함', '필수', '폐지함', '별도', '관계없', '조정되어야', '삭제함', '추천', '맞추', '불구', '실정임', '불과하던',
            '점차' , '다문', '가구였던', '벗어나기', '취지', '추세임', '이루어질', '만원', '용어인', '천만', '알기', '처음', '있던',
            '보호받', '충분히', '합의함', '이행', '전제', '상관', '되도', '너무', '명확화', '한정', '문제', '농어업과', '제안이유',
            '대응', '연이어', '실질', '안정공', '차원', '강화하고자', '가능', '기반', '창출', '부여', '처리', '꾸준히', '확립',
            '없어질', '응대', '평균', '다수', '이어져', '경감시키려', '강구', '형평', '연장', '이해', '배치함', '고침', '법령', '왔으',
            '나타', '직접', '하향', '비정', '만명', '천명', '있었', '항제', '그동안', '폐쇄됨', '일시', '악화', '감면받', '형태',
            '사유인', '출연', '검증', '상호', '대해서만', '탈락', '원활', '있는', '일자', '있는바', '퍼목', '일환', '제고', '주체들',
            '다양', '적합', '포함', '것과', '갖추', '두어', '현실임', '보임', '발견', '산정', '의무화함', '기재', '제출토록', '효율',
            '미치', '하였는지', '점점', '준수', '유사기관과', '높이려', '조기', '호아', '미리', '총액', '설정', '상향', '하향', '신규',
            '열거함', '구제받', '재판상', '대규', '이루어지', '법률상', '상향', '결국', '외부', '고충', '수행', '진행', '조치',
            '방안', '불건전', '발행', '헌마', '획정되', '다소', '않은바', '상태인바', '형식', '종류', '예비후', '획정', '벗어나지',
            '부재라', '해소함', '물론', '인정함', '면제함', '지연되', '지속', '소홀', '적지', '받기', '드러', '해석', '해결', '여전히',
            '요인', '각광받', '들어', '도모', '효과', '필요성', '비중', '자녀인지', '직전년', '분야', '주체', '활성화함', '발전시키',
            '대통', '고정', '아울러', '온라', '영향', '이른바', '올릴', '바탕', '순위', '도지', '밝히기', '해당되', '하주', '위임함',
            '유형', '금액', '협조', '장', '여타', '도지', '제출', '모습', '증명', '편리성', '신뢰성', '개선함', '선고함', '있기',
            '내리기', '이르', '기타', '검토', '개인정', '제공자등', '접근', '현행법상', '항목', '증진', '누려야', '조차', '수집',
            '안전성', '성명', '진실', '구체성', '빈도', '명시함', '수많', '소속', '편의성', '명칭', '민감', '두텁', '이르지', '이루어지지',
            '옮길', '포함함', '거짓', '어려', '차지', '다자', '정책', '활동', '혼동', '개인', '도도', '해소', '호사', '의제',
            '비싼', '사태', '의미', '열거', '감소', '보유', '내역', '열풍', '기여', '널리', '처하도', '경향', '엄격', '자체',
            '이유', '할당', '지났으', '소요되', '시간', '판단', '과정', '중등', '내부', '확충', '새마', '호라목', '상향조', '통지',
            '제삼자', '기획', '개시전', '단계별', '통보', '전부', '다만', '시대', '따르', '출신', '자질', '육박', '불분', '담당',
            '고유', '심각', '상당', '관념', '재정상', '지상', '회계연', '금액과', '각급', '수집되', '만큼', '아직', '밀접히', '복잡',
            '관계기', '않음', '어려워', '처함', '알리더라', '신속히', '수정의결되', '있지만', '인해', '처벌함', '신속', '시행함', '가장',
            '이바', '예정', '합리', '준정', '걸림돌', '자율경', '만연', '심화', '나아', '받아', '불시', '사법상', '이어질', '곳인',
            '내지', '이어져왔음', '제고함', '제안되었는바', '제고함', '상대방', '향상', '불과함', '범주', '추구', '불과', '이루', '운영함',
            '적극', '대다수', '하고자', '말일', '미만인', '천억원', '왔음', '일괄', '이외', '다름없', '감소라', '적절히', '간사',
            '지연', '침해받', '보낸', '얻어', '찾기', '부족', '의정활', '사실상', '인당', '가지', '개선등', '확인받', '예산상',
            '언제', '근간', '여전', '퍼센트', '완화', '사업연', '정책목표', '추정되', '방침', '재산정', '작동함', '충실히', '여지',
            '받던', '시달', '없으', '전함', '물품', '불가능함', '개정함', '해당연', '저지', '가능성', '되지', '연결', 'that', 'persons',
            'better', 'one', 'guilty', 'ten', 'is', 'innocent', '이유만', '오히려', '보장이라', '한사람', '단계', '성인들', '상습',
            '요구', '전환함', '주식등', '하여야', '오랜', '망은행', '거리', '예상', '불필', '왕성', '입법활', '사정', '지침',
            '일일', '특성', '실정', '본안', '사례', '대책', '개념', '종합', '단독', '져버리', '일명', '존재', '연동해', '여비',
            '어느', '만날', '위기', '낮추기', '신설', '충실', '중앙', '김안', '현상', '구성원', '놓치더라', '김신', '그러', '자진',
            '충격', '오히', '두었음', '발맞춰', '변화', '통과', '초점', '더불', '보관', '정액', '밝힌', '위함', '허용되', '첨부',
            '진행되', '각국', '기본원칙인', '지정요건', '행동', '전국', '수여받', '부여함', '대표', '총량', '따라주지', '구분',
            '실현', '심화됨', '상황', '못한채', '초단', '초기', '민간참', '년대', '교환', '지키', '미발', '재등', '향응',
            '유료도', '청명', '빚어져', '한하여만', '처해', '차별받아', '양여', '아니함', '본연', '지나지', '하였음', '가져',
            '경험', '되었음', '고통받', '중요성', '출입', '천만원', '이익', '없음', '도입함', '기초', '적발되', '못해', '만달', '정신상',
            '상실', '끝난', '제정시', '않았던', '성공', '쿠목', '니코', '용량', '미약', '취함', '예외', '현황자료', '노력', '표시',
            '전까지만', '길어져', '조속히', '미터', '변동', '높일', '많아', '법령상', '지붕인', '본인임', '비효율', '증대', '착오',
            '입법취지', '성실', '하였', '기본취지', '특정', '일정액', '처분상', '동안', '장시간', '이용함', '일주', '부동', '오해',
            '높이고자', '두되', '발발', '최초', '컨설', '불함', '주기', '되새', '억지', '알지', '제외함', '과태료만', '용도', '액체',
            '용액', '철저', '개정', '업무상', '적격', '지키지', '확정', '불합', '시행령', '산입', '배려', '불편', '가치', '서비',
            '증설', '신뢰도', '제외함', '책임성', '시스템', '필수적임', '작동되기', '성실', '책무', '구조', '정세', '사항들', '기본의무인',
            '단축함', '통상', '여유', '돌보기', '공백', '신뢰', '기록', '바닥', '도모함', '거절이유', '추세', '단축', '불사', '종료',
            '조정함', '세대들', '어긋', '여명', '일씩', '사항들', ''
        ]

        # ✅ 텍스트 전처리
        text = text.lower()  # 모든 문자를 소문자로 변환
        text = re.sub(r'[^가-힣a-z\s]', ' ', text)  # 한글, 영문, 공백만 남김

        particle_pattern = r'\b(\w+)(들|등|은|는|이|가|을|를|에|의|으로|와|과|인데|도|에서|부터|까지|보다|에게|한테|께|으로써|으로부터|이지만|에만|에게만|처럼|뿐만|하였음|하였던|하였기|시킬|시켜|시키지|하던|하여야|하고자|하는지|되지|되었음|됨)\b'
        text = re.sub(particle_pattern, r'\1', text)

        # ✅ 문장 분리 및 정리
        sentences = re.split(r'[.\n]', text)
        sentences = [s.strip() for s in sentences if len(s.strip()) > 10]

        # ✅ 키워드 추출
        keywords =  summarize_with_keywords(
            sentences,
            min_count=count,
            max_length=10,
            beta=0.85,
            max_iter=20
        )

        filtered_keywords = {
            k: v for k, v in keywords.items()
            if not re.match(r'.*(다|이다|있다|한다|했다|하다|보다|한|를|될|을|이|가|의|은|는|로|까지|에|게|적|고|며|면|서|부터|인인|용|른|된|춘|하|운|나|와|할|하여|하되|써|되어|도록|하기|이기|더라도|적인|것임|하지|는데|하려|있|었)$', k)  # 조사/어미로 끝나는 키워드 제거
            if not re.search(r'째', k) # 해당 부분이 포함되면 제거
        }

        # 🔸 DataFrame 변환
        df = pd.DataFrame(
            sorted(filtered_keywords.items(), key=lambda x: -x[1]),
            columns=['Keyword', 'Score']
        )

        # 불용어 제거: 'Keyword' 컬럼에서 불용어를 제외한 새로운 리스트 생성
        df['Keyword'] = df['Keyword'].apply(lambda x: ' '.join([word for word in x.split() if word not in stopwords]))

        # 불용어를 제외한 키워드만 남기기 (불용어가 포함된 키워드는 제거됨)
        df = df[df['Keyword'].str.strip() != '']

        return df.head(20).values.tolist()
    except ImportError as e:
        print(e)
        print("krwordrank.word 라이브러리가 설치되어 있지 않습니다. pip install krwordrank.word로 설치해주세요.")
        return []


# Kiwi
def extract_keywords_with_kiwi(text, top_n=10):
    """
    한국어 텍스트에서 명사 키워드를 추출하는 함수 (kiwipiepy 사용)

    Args:
        text (str): 키워드를 추출할 텍스트
        top_n (int): 반환할 상위 키워드 개수

    Returns:
        list: (키워드, 빈도수) 튜플의 리스트
    """
    try:
        from kiwipiepy import Kiwi

        # 텍스트 전처리
        text = text.lower()  # 소문자 변환
        text = re.sub(r'[^\w\s]', ' ', text)  # 특수문자 제거

        # 불용어 목록은 위와 동일
        stopwords = [
            '이', '그', '저', '것', '이것', '그것', '저것',
            '나', '너', '우리', '당신', '그들', '저희', '자기',
            '이런', '그런', '저런', '이렇게', '그렇게', '저렇게',
            '및', '에', '의', '을', '를', '이', '가', '은', '는',
            '로', '으로', '에서', '에게', '한테', '께', '와', '과',
            '이나', '나', '랑', '하고', '까지', '부터', '도', '만',
            '데', '같은', '같이', '처럼', '보다', '라고', '하다', '임',
            '있다', '없다', '되다', '하다', '때문', '때', '내', '그냥'
        ]

        # Kiwi 형태소 분석기 초기화
        kiwi = Kiwi()

        # 텍스트 분석 및 명사 추출
        result = kiwi.analyze(text)
        nouns = []

        for token in result[0][0]:
            if token.tag in ['NNG', 'NNP']:  # 일반 명사와 고유 명사만 추출
                nouns.append(token.form)

        # 단일 글자 명사와 불용어 제거
        filtered_nouns = [noun for noun in nouns if noun not in stopwords and len(noun) > 1]

        # 빈도수 계산
        noun_counter = Counter(filtered_nouns)

        # 상위 키워드 추출
        top_keywords = noun_counter.most_common(top_n)

        return top_keywords

    except ImportError:
        print("kiwipiepy 라이브러리가 설치되어 있지 않습니다. pip install kiwipiepy로 설치해주세요.")
        return []


# KKMA
def extract_keywords_with_kkma(text, top_n=10):
    """
    KKMA 형태소 분석기를 사용한 명사 키워드 추출

    Args:
        text (str): 키워드를 추출할 텍스트
        top_n (int): 반환할 상위 키워드 개수

    Returns:
        list: (키워드, 빈도수) 튜플의 리스트
    """
    try:
        from konlpy.tag import Kkma

        kkma = Kkma()

        # 텍스트 전처리
        text = text.lower()
        text = re.sub(r'[^\w\s가-힣]', ' ', text)

        # 불용어 목록 (기존과 동일)
        stopwords = [
            '이', '그', '저', '것', '이것', '그것', '저것',
            '나', '너', '우리', '당신', '그들', '저희', '자기',
            '이런', '그런', '저런', '이렇게', '그렇게', '저렇게',
            '및', '에', '의', '을', '를', '이', '가', '은', '는',
            '로', '으로', '에서', '에게', '한테', '께', '와', '과',
            '이나', '나', '랑', '하고', '까지', '부터', '도', '만',
            '데', '같은', '같이', '처럼', '보다', '라고', '하다', '임',
            '있다', '없다', '되다', '하다', '때문', '때', '내', '그냥'
        ]

        # 명사 추출
        nouns = kkma.nouns(text)

        # 필터링
        filtered_nouns = [noun for noun in nouns if noun not in stopwords and len(noun) > 1]

        # 빈도수 계산
        noun_counter = Counter(filtered_nouns)
        return noun_counter.most_common(top_n)

    except ImportError:
        print("konlpy 또는 KKMA가 설치되어 있지 않습니다. pip install konlpy로 설치해주세요.")
        return []